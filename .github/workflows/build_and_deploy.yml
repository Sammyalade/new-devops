name: Deploy Dockerhub

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Restore Maven Package
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('/*.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t sammyalade/hello-world:latest .

      - name: Push Docker image to Docker Hub
        run: docker push sammyalade/hello-world:latest

  deploy-on-aws:
        runs-on: ubuntu-latest
        needs: build-and-deploy
        steps:
          - name: Checkout code
            uses: actions/checkout@v2

          - name: Set up SSH key
            run: |
              echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
              chmod 600 private_key.pem

          - name: Connect to AWS instance and deploy
            run: |
              ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@ec2-13-53-216-240.eu-north-1.compute.amazonaws.com << 'EOF'
                # Install Docker if not installed
                if ! command -v docker &> /dev/null
                then
                  echo "Docker not found. Installing Docker..."
                  sudo apt-get update
                  sudo apt-get install -y docker.io
                  sudo systemctl start docker
                  sudo systemctl enable docker
                fi
              
                # Add the ubuntu user to the docker group
                echo "Adding user to Docker group..."
                sudo usermod -aG docker ubuntu
              
                # Restart Docker to apply changes
                sudo systemctl restart docker
              
                # Pull the Docker image
                echo "Pulling Docker image..."
                docker pull sammyalade/hello-world
              
                # Stop and remove existing container if it exists
                CONTAINER_NAME=my_container
                if [ "$(docker ps -a -q -f name=${CONTAINER_NAME})" ]; then
                    echo "Container ${CONTAINER_NAME} exists. Stopping and removing it..."
                    docker stop ${CONTAINER_NAME}
                    docker rm ${CONTAINER_NAME}
                else
                    echo "Container ${CONTAINER_NAME} does not exist."
                fi
              
                # Create and run new container
                echo "Running new container..."
                docker run -d --name ${CONTAINER_NAME} sammyalade/hello-world
              EOF
